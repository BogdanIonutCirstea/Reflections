What happens when you initialize a repository? Why do you need to do it?

	A .git folder is created; it is needed to track changes to the repository.

How is the staging area different from the working directory and the repository? What value do you think it offers?

	The staging area is an intermediate area where changes to a repository are being prepared. It allows more control
	of commits, by allowing the adding of whatever file one wants to add for each specific commit. Thus, this allows
	more flexibility than would be possible if the entire working directory (all the files inside the working directory)
	or the entire repository (all the files within the working directory belonging to the current commit) would have to
	be committed each time. It also allows for multiple separate commits for different file instead of a single commit 
	incorporating all changed files.

How can you use the staging area to make sure you have one commit per logical change?

	By adding changed files to the staging area at the right level of granularity, that is, the level of granularity 
	corresponding to separate logical changes, and then committing separately for each 'block of files' corresponding
	to a single logical change. 

What are some situations when branches would be helpful in keeping your history organized? How would branches help?

	When we want to create different 'parallel' versions of a project and switch easily between them; they help by making
	switching between branches much easier.